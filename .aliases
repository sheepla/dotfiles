#!/bin/bash

# Basic commands
alias c='clear'
alias mkd='mkdir -pv'

mkcd() {
    mkdir -p $1 && cd $1
}

alias py3='python3'

# Setting files
alias rebash='source ~/.bashrc'
alias bashrc='$EDITOR ~/.bashrc'
alias profile='$EDITOR ~/.profile'
alias reprofile='source ~/.profile' 
alias vimrc='$EDITOR ~/.vimrc'
alias path='echo $PATH | tr ":" "\n"'

# Vim
command -v nvim &>/dev/null && alias v='nvim'
alias gvim='nvim-qt'

alias e="$EDITOR"

# Man
man() {
    LESS_TERMCAP_md=$'\e[01;34m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;30m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;35m' \
    command man "$@"
}

# Git
alias g='git'
alias ga='git add'
alias gst='git status'
alias gl='git log --decorate --oneline'
alias glg='git log --decorate --oneline --graph'
alias gcm='git commit'
alias gdf='git diff'

clone() {
    git clone https://github.com/"$1"/"$2".git
}

# W3m
alias w3mg='w3m www.google.com'
alias w3md='w3m www.duckduckgo.com'

# tar

# # archive extractor
# # usage: ex <file>
extract()
{
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1   ;;
            *.tar.gz)    tar xzf $1   ;;
            *.bz2)       bunzip2 $1   ;;
            *.rar)       unrar x $1     ;;
            *.gz)        gunzip $1    ;;
            *.tar)       tar xf $1    ;;
            *.tbz2)      tar xjf $1   ;;
            *.tgz)       tar xzf $1   ;;
            *.zip)       unzip $1     ;;
            *.Z)         uncompress $1;;
            *.7z)        7z x $1      ;;
            *)           echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}


# translate-shell(trans)
alias en2ja='trans en:ja -brief -shell -e google'
alias ja2en='trans ja:en -brief -shell -e google'
alias eiwa='trans en:ja -dictionary -e google'
alias waei='trans ja:en -dictionary -e google'

# Other
alias r='ranger'
alias fontlist="fc-list | awk -F '[:,]' '{print $2}' | sort | uniq"
# }}}

# fzf
alias fzd='find . -type d | fzf | sed "s/ /\\ /g"'

# bat -----------------------------------
alias rebat='bat cache --build'
alias bat='bat --wrap auto'

# exa
alias l='exa --all --icons --classify'
alias ls='exa --icons'
alias ll='exa --long --all --git --icons'
alias lt='exa --long --all --git --icons --tree'

#alias l='exa --classify'
#alias la='exa --all --classify'
#alias ll='exa --long --all --git --classify'
#alias lt='exa --long --all --git --tree --classify'

# pacman
if command -v pacman >/dev/null && command -v fzf >/dev/null
then

    # Show package info with preview
    pacpreview() {
        pacman -Qq | fzf --preview 'pacman -Qil {}' \
            --layout=reverse \
            --bind 'enter:execute(pacman -Qil {} | less)'
    }

    pacshowdisc() {
        LANG=C pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -h
    }
fi
